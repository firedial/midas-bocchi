openapi: "3.0.3"

info:
  title: "Midas API"
  version: "1.0.0"

paths:
  "/login":
    post:
      summary: "ログイン"
      description: "認証トークンを取得する"
      tags: ["auth"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "Email"
                  example: hoge@example.com
                password:
                  type: string
                  description: "パスワード"
                  example: secret
      responses:
        "200":
          description: "認証成功(Cookieにトークン保存)"
        "401":
          description: "認証失敗"

  "/logout":
    post:
      summary: "ログアウト"
      description: "認証トークンを破棄する"
      tags: ["auth"]
      responses:
        "200":
          description: "ログアウト成功"

  "/balances":
    get:
      summary: "収支表取得"
      description: "収支表を取得する"
      tags: ["balances"]
      parameters:
        - name: limit
          in: query
          description: "取得する最大数"
          schema: { type: number, example: 20 }
        - name: orderby
          in: query
          description: >
            収支IDによる並び替え:
              * `asc` - 昇順
              * `desc` - 降順
          schema:
            type: string
            enum:
              - asc
              - desc
              - null
            example: desc
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 収支ID
                      example: 123
                    amount:
                      type: string
                      description: 金額
                      example: -500
                    item:
                      type: string
                      description: 項目
                      example: うどん
                    kind_element_id:
                      type: string
                      description: 種別ID
                      example: 2
                    purpose_element_id:
                      type: string
                      description: 予算ID
                      example: 5
                    place_element_id:
                      type: string
                      description: 場所ID
                      example: 6
                    date:
                      type: string
                      description: 日付
                      example: "2024-10-23"
                    kind_element_description:
                      type: string
                      description: 種別名
                      example: 昼食
                    purpose_element_description:
                      type: string
                      description: 予算名
                      example: 食費
                    place_element_description:
                      type: string
                      description: 場所名
                      example: 財布
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "収支登録"
      description: "収支を登録する"
      tags: ["balances"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  example: -500
                item:
                  type: string
                  description: 項目
                  example: うどん
                kind_element_id:
                  type: string
                  description: 種別ID
                  example: 2
                purpose_element_id:
                  type: string
                  description: 予算ID
                  example: 5
                place_element_id:
                  type: string
                  description: 場所ID
                  example: 6
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/balances/{balanceId}":
    get:
      summary: "収支取得"
      description: "収支を取得する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 収支ID
                    example: 123
                  amount:
                    type: string
                    description: 金額
                    example: -500
                  item:
                    type: string
                    description: 項目
                    example: うどん
                  kind_element_id:
                    type: string
                    description: 種別ID
                    example: 2
                  purpose_element_id:
                    type: string
                    description: 予算ID
                    example: 5
                  place_element_id:
                    type: string
                    description: 場所ID
                    example: 6
                  date:
                    type: string
                    description: 日付
                    example: "2024-10-23"
                  kind_element_description:
                    type: string
                    description: 種別名
                    example: 昼食
                  purpose_element_description:
                    type: string
                    description: 予算名
                    example: 食費
                  place_element_description:
                    type: string
                    description: 場所名
                    example: 財布
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: "収支更新"
      description: "収支を更新する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  example: -500
                item:
                  type: string
                  description: 項目
                  example: うどん
                kind_element_id:
                  type: string
                  description: 種別ID
                  example: 2
                purpose_element_id:
                  type: string
                  description: 予算ID
                  example: 5
                place_element_id:
                  type: string
                  description: 場所ID
                  example: 6
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: "収支削除"
      description: "収支を削除する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/moves/{attributeName}":
    get:
      summary: "移動表取得"
      description: "移動表を取得する"
      tags: ["moves"]
      parameters:
        - $ref: "#/components/parameters/moveAttributeName"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 移動ID
                      example: 123
                    amount:
                      type: string
                      description: 金額
                      example: 500
                    item:
                      type: string
                      description: 項目
                      example: チャージ
                    before_id:
                      type: string
                      description: 移動前ID
                      example: 2
                    after_id:
                      type: string
                      description: 移行後ID
                      example: 5
                    date:
                      type: string
                      description: 日付
                      example: "2024-10-23"
                    before_description:
                      type: string
                      description: 移動前名
                      example: 財布
                    after_description:
                      type: string
                      description: 移動後名
                      example: ICカード
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "移動登録"
      description: "移動を登録する"
      tags: ["moves"]
      parameters:
        - $ref: "#/components/parameters/moveAttributeName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  minimum: 1
                  example: 500
                item:
                  type: string
                  description: 項目
                  example: チャージ
                before_id:
                  type: string
                  description: 移動前ID
                  example: 2
                after_id:
                  type: string
                  description: 移行後ID
                  example: 5
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/moves/{attributeName}/{moveId}":
    get:
      summary: "移動取得"
      description: "移動を取得する"
      tags: ["moves"]
      parameters:
        - $ref: "#/components/parameters/moveAttributeName"
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 移動ID
                    example: 123
                  amount:
                    type: string
                    description: 金額
                    example: 500
                  item:
                    type: string
                    description: 項目
                    example: チャージ
                  before_id:
                    type: string
                    description: 移動前ID
                    example: 2
                  after_id:
                    type: string
                    description: 移行後ID
                    example: 5
                  date:
                    type: string
                    description: 日付
                    example: "2024-10-23"
                  before_description:
                    type: string
                    description: 移動前名
                    example: 財布
                  after_description:
                    type: string
                    description: 移動後名
                    example: ICカード
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: "移動更新"
      description: "移動を更新する"
      tags: ["moves"]
      parameters:
        - $ref: "#/components/parameters/moveAttributeName"
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  minimum: 1
                  example: 500
                item:
                  type: string
                  description: 項目
                  example: チャージ
                before_id:
                  type: string
                  description: 移動前ID
                  example: 2
                after_id:
                  type: string
                  description: 移行後ID
                  example: 5
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      summary: "移動削除"
      description: "移動を削除する"
      tags: ["moves"]
      parameters:
        - $ref: "#/components/parameters/moveAttributeName"
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/attribute_elements/{attributeName}":
    get:
      summary: "属性要素表取得"
      description: "属性要素表を取得する"
      tags: ["attribute_elements"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
        - name: isOnlySelectable
          in: query
          description: >
            * `true` - priority が 1 以上のものだけ取得する
          schema:
            type: string
            example: true
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: 属性要素ID
                      example: 100
                    name:
                      type: string
                      description: 属性要素名
                      example: lunch
                    description:
                      type: string
                      description: 属性要素説明
                      example: 昼食
                    priority:
                      type: number
                      description: 優先度
                      example: 10
                    category_id:
                      type: number
                      description: 親カテゴリーID
                      example: 32
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: "属性要素登録"
      description: "属性要素を登録する"
      tags: ["attribute_elements"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 属性要素名
                  example: lunch
                description:
                  type: string
                  description: 属性要素説明
                  example: 昼食
                priority:
                  type: number
                  description: 優先度
                  example: 10
                category_id:
                  type: number
                  description: 親カテゴリーID
                  example: 32
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/attribute_elements/{attributeName}/{elementId}":
    get:
      summary: "属性要素取得"
      description: "属性要素を取得する"
      tags: ["attribute_elements"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
        - name: elementId
          required: true
          in: path
          description: 要素ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 属性要素ID
                    example: 100
                  name:
                    type: string
                    description: 属性要素名
                    example: lunch
                  description:
                    type: string
                    description: 属性要素説明
                    example: 昼食
                  priority:
                    type: number
                    description: 優先度
                    example: 10
                  category_id:
                    type: number
                    description: 親カテゴリーID
                    example: 32
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: "属性要素更新"
      description: "属性要素を更新する"
      tags: ["attribute_elements"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
        - name: elementId
          required: true
          in: path
          description: 要素ID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 属性要素名
                  example: lunch
                description:
                  type: string
                  description: 属性要素説明
                  example: 昼食
                priority:
                  type: number
                  description: 優先度
                  example: 10
                category_id:
                  type: number
                  description: 親カテゴリーID
                  example: 32
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/attribute_categories/{attributeName}":
    get:
      summary: "属性カテゴリー表取得"
      description: "属性カテゴリー表を取得する"
      tags: ["attribute_categories"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: 属性カテゴリーID
                      example: 100
                    name:
                      type: string
                      description: 属性カテゴリー名
                      example: food
                    description:
                      type: string
                      description: 属性カテゴリー説明
                      example: 食費
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: "属性カテゴリー登録"
      description: "属性カテゴリーを登録する"
      tags: ["attribute_categories"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 属性カテゴリー名
                  example: food
                description:
                  type: string
                  description: 属性カテゴリー説明
                  example: 食費
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/attribute_categories/{attributeName}/{categoryId}":
    put:
      summary: "属性カテゴリー更新"
      description: "属性カテゴリーを更新する"
      tags: ["attribute_categories"]
      parameters:
        - $ref: "#/components/parameters/attributeName"
        - name: categoryId
          required: true
          in: path
          description: カテゴリーID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 属性カテゴリー名
                  example: food
                description:
                  type: string
                  description: 属性カテゴリー説明
                  example: 食費
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/salary":
    post:
      summary: "給料明細登録"
      description: "給料明細を登録する"
      tags: ["others"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                baseSalarary:
                  type: integer
                  minimum: 1
                  description: 基本給
                  example: 200000
                adjustmentSalary:
                  type: integer
                  minimum: 1
                  description: 職務調整給
                  example: 50000
                transportation:
                  type: integer
                  minimum: 1
                  description: 交通費
                  example: 6000
                holdingIncentives:
                  type: integer
                  minimum: 1
                  description: 持株奨励金
                  example: 1000
                healthInsurance:
                  type: integer
                  minimum: 1
                  description: 健康保険料
                  example: 12000
                welfarePension:
                  type: integer
                  minimum: 1
                  description: 厚生年金保険
                  example: 3000
                residentTax:
                  type: integer
                  minimum: 1
                  description: 住民税
                  example: 9000
                employmentInsurance:
                  type: integer
                  minimum: 1
                  description: 雇用保険料
                  example: 900
                incomeTax:
                  type: integer
                  minimum: 1
                  description: 所得税
                  example: 14000
                holding:
                  type: integer
                  minimum: 1
                  description: 持株
                  example: 15000
                date:
                  type: string
                  description: 支給日
                  example: "2024-02-25"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/bonus":
    post:
      summary: "賞与明細登録"
      description: "賞与明細を登録する"
      tags: ["others"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bonus:
                  type: integer
                  minimum: 1
                  description: ボーナス
                  example: 200000
                healthInsurance:
                  type: integer
                  minimum: 1
                  description: 健康保険料
                  example: 12000
                welfarePension:
                  type: integer
                  minimum: 1
                  description: 厚生年金保険
                  example: 3000
                employmentInsurance:
                  type: integer
                  minimum: 1
                  description: 雇用保険料
                  example: 900
                incomeTax:
                  type: integer
                  minimum: 1
                  description: 所得税
                  example: 14000
                date:
                  type: string
                  description: 支給日
                  example: "2024-02-25"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  "/monthly":
    post:
      summary: "月々の支払い登録"
      description: "月々の支払いを登録する"
      tags: ["others"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                house_rent:
                  type: object
                  nullable: true
                  description: 家賃
                  properties:
                    amount:
                      type: integer
                      minimum: 1
                      description: 金額
                      example: 50000
                    date:
                      type: string
                      description: 支払日
                      example: "2024-02-27"
                gas:
                  type: object
                  nullable: true
                  description: ガス
                  properties:
                    amount:
                      type: integer
                      minimum: 1
                      description: 金額
                      example: 3000
                    date:
                      type: string
                      description: 支払日
                      example: "2024-02-15"
                water:
                  type: object
                  nullable: true
                  description: 水道
                  properties:
                    amount:
                      type: integer
                      minimum: 1
                      description: 金額
                      example: 2000
                    date:
                      type: string
                      description: 支払日
                      example: "2024-02-15"
                elect:
                  type: object
                  nullable: true
                  description: 電気
                  properties:
                    amount:
                      type: integer
                      minimum: 1
                      description: 金額
                      example: 5000
                    date:
                      type: string
                      description: 支払日
                      example: "2024-02-10"
                net:
                  type: object
                  nullable: true
                  description: ネット
                  properties:
                    amount:
                      type: integer
                      minimum: 1
                      description: 金額
                      example: 6000
                    date:
                      type: string
                      description: 支払日
                      example: "2024-02-01"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  parameters:
    attributeName:
      name: attributeName
      required: true
      in: path
      description: >
        対象の属性
          * `kind` - 種別
          * `purposes` - 予算
          * `places` - 場所
      schema:
        type: string
        enum:
          - kind
          - purposes
          - places
        example: places
    moveAttributeName:
      name: attributeName
      required: true
      in: path
      description: >
        対象の属性
          * `purposes` - 予算
          * `places` - 場所
      schema:
        type: string
        enum:
          - kind
          - purposes
          - places
        example: places

  responses:
    NoContent:
      description: 処理成功
    BadRequest:
      description: パラメータ不正
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: NotFound
    InternalServerError:
      description: 予期せぬエラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: "error_message"
