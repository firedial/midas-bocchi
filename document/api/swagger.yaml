openapi: "3.0.3"

info:
  title: "Midas API"
  version: "1.0.0"

paths:
  "/login":
    post:
      summary: "ログイン"
      description: "認証トークンを取得する"
      tags: ["auth"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "Email"
                  example: hoge@example.com
                password:
                  type: string
                  description: "パスワード"
                  example: secret
      responses:
        "200":
          description: "認証成功(Cookieにトークン保存)"
        "401":
          description: "認証失敗"

  "/logout":
    post:
      summary: "ログアウト"
      description: "認証トークンを破棄する"
      tags: ["auth"]
      responses:
        "200":
          description: "ログアウト成功"

  "/balances":
    get:
      summary: "収支表取得"
      description: "収支表を取得する"
      tags: ["balances"]
      parameters:
        - name: limit
          in: query
          description: "取得する最大数"
          schema: { type: number, example: 20 }
        - name: orderby
          in: query
          description: >
            収支IDによる並び替え:
              * `asc` - 昇順
              * `desc` - 降順
          schema:
            type: string
            enum:
              - asc
              - desc
              - null
            example: desc
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 収支ID
                      example: 123
                    amount:
                      type: string
                      description: 金額
                      example: -500
                    item:
                      type: string
                      description: 項目
                      example: うどん
                    kind_element_id:
                      type: string
                      description: 種別ID
                      example: 2
                    purpose_element_id:
                      type: string
                      description: 予算ID
                      example: 5
                    place_element_id:
                      type: string
                      description: 場所ID
                      example: 6
                    date:
                      type: string
                      description: 日付
                      example: "2024-10-23"
                    kind_element_description:
                      type: string
                      description: 種別名
                      example: 昼食
                    purpose_element_description:
                      type: string
                      description: 予算名
                      example: 食費
                    place_element_description:
                      type: string
                      description: 場所名
                      example: 財布
    post:
      summary: "収支登録"
      description: "収支を登録する"
      tags: ["balances"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  example: -500
                item:
                  type: string
                  description: 項目
                  example: うどん
                kind_element_id:
                  type: string
                  description: 種別ID
                  example: 2
                purpose_element_id:
                  type: string
                  description: 予算ID
                  example: 5
                place_element_id:
                  type: string
                  description: 場所ID
                  example: 6
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "200":
          description: "Success operation"
          content:
            text/html:
              schema:
                type: string
              example: 1
        "500":
          description: "登録失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message

  "/balances/{balanceId}":
    get:
      summary: "収支取得"
      description: "収支を取得する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 収支ID
                    example: 123
                  amount:
                    type: string
                    description: 金額
                    example: -500
                  item:
                    type: string
                    description: 項目
                    example: うどん
                  kind_element_id:
                    type: string
                    description: 種別ID
                    example: 2
                  purpose_element_id:
                    type: string
                    description: 予算ID
                    example: 5
                  place_element_id:
                    type: string
                    description: 場所ID
                    example: 6
                  date:
                    type: string
                    description: 日付
                    example: "2024-10-23"
                  kind_element_description:
                    type: string
                    description: 種別名
                    example: 昼食
                  purpose_element_description:
                    type: string
                    description: 予算名
                    example: 食費
                  place_element_description:
                    type: string
                    description: 場所名
                    example: 財布
        "500":
          description: "取得失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message
    put:
      summary: "収支更新"
      description: "収支を更新する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  example: -500
                item:
                  type: string
                  description: 項目
                  example: うどん
                kind_element_id:
                  type: string
                  description: 種別ID
                  example: 2
                purpose_element_id:
                  type: string
                  description: 予算ID
                  example: 5
                place_element_id:
                  type: string
                  description: 場所ID
                  example: 6
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "200":
          description: "Success operation"
          content:
            text/html:
              schema:
                type: string
              example: 1
        "500":
          description: "更新失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message
    delete:
      summary: "収支削除"
      description: "収支を削除する"
      tags: ["balances"]
      parameters:
        - name: balanceId
          required: true
          in: path
          description: 収支ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            text/html:
              schema:
                type: string
              example: 1
        "500":
          description: "削除失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message

  "/moves/{attributeName}":
    get:
      summary: "移動表取得"
      description: "移動表を取得する"
      tags: ["moves"]
      parameters:
        - name: attributeName
          required: true
          in: path
          description: >
            移動させる属性
              * `purposes` - 予算
              * `places` - 場所
          schema:
            type: string
            enum:
              - purposes
              - places
            example: places
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: 移動ID
                      example: 123
                    amount:
                      type: string
                      description: 金額
                      example: 500
                    item:
                      type: string
                      description: 項目
                      example: チャージ
                    before_id:
                      type: string
                      description: 移動前ID
                      example: 2
                    after_id:
                      type: string
                      description: 移行後ID
                      example: 5
                    date:
                      type: string
                      description: 日付
                      example: "2024-10-23"
                    before_description:
                      type: string
                      description: 移動前名
                      example: 財布
                    after_description:
                      type: string
                      description: 移動後名
                      example: ICカード
    post:
      summary: "移動登録"
      description: "移動を登録する"
      tags: ["moves"]
      parameters:
        - name: attributeName
          required: true
          in: path
          description: >
            移動させる属性
              * `purposes` - 予算
              * `places` - 場所
          schema:
            type: string
            enum:
              - purposes
              - places
            example: places
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  minimum: 1
                  example: 500
                item:
                  type: string
                  description: 項目
                  example: チャージ
                before_id:
                  type: string
                  description: 移動前ID
                  example: 2
                after_id:
                  type: string
                  description: 移行後ID
                  example: 5
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "200":
          description: "Success operation"
        "400":
          description: "登録失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message

  "/moves/{attributeName}/{moveId}":
    get:
      summary: "移動取得"
      description: "移動を取得する"
      tags: ["moves"]
      parameters:
        - name: attributeName
          required: true
          in: path
          description: >
            移動させる属性
              * `purposes` - 予算
              * `places` - 場所
          schema:
            type: string
            enum:
              - purposes
              - places
            example: places
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 移動ID
                    example: 123
                  amount:
                    type: string
                    description: 金額
                    example: 500
                  item:
                    type: string
                    description: 項目
                    example: チャージ
                  before_id:
                    type: string
                    description: 移動前ID
                    example: 2
                  after_id:
                    type: string
                    description: 移行後ID
                    example: 5
                  date:
                    type: string
                    description: 日付
                    example: "2024-10-23"
                  before_description:
                    type: string
                    description: 移動前名
                    example: 財布
                  after_description:
                    type: string
                    description: 移動後名
                    example: ICカード
        "500":
          description: "取得失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message
    put:
      summary: "移動更新"
      description: "移動を更新する"
      tags: ["moves"]
      parameters:
        - name: attributeName
          required: true
          in: path
          description: >
            移動させる属性
              * `purposes` - 予算
              * `places` - 場所
          schema:
            type: string
            enum:
              - purposes
              - places
            example: places
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: 金額
                  minimum: 1
                  example: 500
                item:
                  type: string
                  description: 項目
                  example: チャージ
                before_id:
                  type: string
                  description: 移動前ID
                  example: 2
                after_id:
                  type: string
                  description: 移行後ID
                  example: 5
                date:
                  type: string
                  description: 日付
                  example: "2024-10-23"
      responses:
        "200":
          description: "Success operation"
        "400":
          description: "更新失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message
    delete:
      summary: "移動削除"
      description: "移動を削除する"
      tags: ["moves"]
      parameters:
        - name: attributeName
          required: true
          in: path
          description: >
            移動させる属性
              * `purposes` - 予算
              * `places` - 場所
          schema:
            type: string
            enum:
              - purposes
              - places
            example: places
        - name: moveId
          required: true
          in: path
          description: 移動ID
          schema:
            type: string
            example: 123
      responses:
        "200":
          description: "Success operation"
        "500":
          description: "削除失敗"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: error_message
