name: nagisa image build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "nagisa/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: elm download
        run: |
          curl -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
          gunzip elm.gz
          chmod +x elm
          mv elm /usr/local/bin/
      - name: install uglifyjs
        run: sudo apt install -y uglifyjs
      - name: build file
        run: |
          cd nagisa
          elm make src/Main.elm --optimize --output=elm.js
          uglifyjs elm.js --compress "pure_funcs=[F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9],pure_getters,keep_fargs=false,unsafe_comps,unsafe" | uglifyjs --mangle --output elm.min.js
          mv elm.min.js main.js
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build_nagisa
          path: nagisa/main.js

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: download nagisa build
        uses: actions/download-artifact@v4
        with:
          name: build_nagisa
      - name: check
        run: ls -al
      - name: move
        run: mv main.js haruhi/public/main.js
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/midas-bocchi-test:latest
          file: haruhi/DockerfileProduction
          platforms: linux/arm/v7
